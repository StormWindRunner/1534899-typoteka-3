mixin pagination(page, totalPages, width, prefix)
  -
    // вычислим начальную и конечную страницу диапазона без учёта ограничений
    let start = page - width;
    let end = page + width;

    // передвинем диапазон вправо, если он начинается с номера меньше единицы 
    if(start < 1){
      end += 1 - start;
      start = 1;
    }
    // передвинем диапазон влево, если он заканчивается номером больше количества страниц
    if(end > totalPages){
      start -= end - totalPages;
      end = totalPages;
    }

    // если мы оказались в этой ветке, значит, всего страниц слишком мало. делаем начало диапазона 1
    if(start < 1){
      start = 1;
    }
    let i = start - 1

  ul.preview__pagination.pagination
    if start > 1
      li.pagination__item
        a(href = `${prefix}page=${page - 1}`) Назад
    while i++ < end
      li.pagination__item(class = {'pagination__item--active': i === page})
        a(href = `${prefix}page=${i}`)= i
    if end < totalPages
      li.pagination__item
        a(href = `${prefix}page=${page + 1}`) Вперёд

style.
  a.active{
    pointer-events: none;
  }

style.
  .server-error-wrap {
    color: white;
    background-color: tomato;
    border-radius: 10px;
    margin: 20px 0 0;
  }
  .server-error-item {
    padding: 10px;
  }

mixin insertErrorMessage(messages)
  if messages
    .server-error-wrap
      each message in messages
        .server-error-item= message

mixin registerErrorMessage(messages)
  if messages
    .form__validation-error
      p.form__error-message При регистрации произошли ошибки:
      ul.form__errors
        each message in messages
          li.form__error= message

mixin commentErrorMessage(messages)
  if messages
    each message in messages
      p.comments__error= message


doctype html
html(lang='ru')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width,initial-scale=1')
    meta(name='description' content='Личный блог Типотека')
    meta(http-equiv='X-UA-Compatible' content='ie=edge')
    title Типотека
    link(rel='preload' href='/fonts/Inter-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/Inter-Medium.woff2' as='font' crossorigin='anonymous')
    link(rel='preload' href='/fonts/SFProDisplay-Regular.woff2' as='font' crossorigin='anonymous')
    link(rel='stylesheet' href='/css/style.min.css')
  body
    .wrapper-color 
      include partials/header.pug
      block content
      include partials/footer.pug
      script(src='/js/vendor.js')
      script(src='/js/main.js')